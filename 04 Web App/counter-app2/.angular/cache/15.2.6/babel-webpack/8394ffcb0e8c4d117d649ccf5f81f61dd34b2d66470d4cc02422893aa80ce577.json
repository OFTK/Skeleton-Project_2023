{"ast":null,"code":"import * as signalR from \"@aspnet/signalr\";\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { map } from \"rxjs/operators\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nvar AppComponent = /** @class */function () {\n  function AppComponent(http) {\n    var _this = this;\n    this.http = http;\n    this.httpOptions = {\n      headers: new HttpHeaders({\n        \"Content-Type\": \"application/json\",\n        \"Access-Control-Allow-Origin\": \"*\",\n        \"Access-Control-Allow-Methods\": \"POST, GET\",\n        \"Access-Control-Allow-Headers\": \"Content-Type\"\n      })\n    };\n    this.negotiateUrl = \"https://skeletonfunctionapp.azurewebsites.net/api/negotiate\";\n    this.getCounterUrl = \"https://skeletonfunctionapp.azurewebsites.net/api/getcounter\";\n    this.updateCounterUrl = \"https://skeletonfunctionapp.azurewebsites.net/api/updatecounter\";\n    // private readonly negotiateUrl = \"http://localhost:7071/api/negotiate\";\n    // private readonly getCounterUrl = \"http://localhost:7071/api/getcounter\";\n    // private readonly updateCounterUrl = \"http://localhost:7071/api/updatecounter\";\n    this.counterId = 1;\n    this.counter = 0;\n    var negotiateBody = {\n      UserId: \"SomeUser\"\n    };\n    this.http.post(this.negotiateUrl, JSON.stringify(negotiateBody), this.httpOptions).pipe(map(function (connectionDetails) {\n      return new signalR.HubConnectionBuilder().withUrl(\"\".concat(connectionDetails.url), {\n        accessTokenFactory: function () {\n          return connectionDetails.accessToken;\n        }\n      }).build();\n    })).subscribe(function (hub) {\n      _this.hubConnection = hub;\n      hub.on(\"CounterUpdate\", function (data) {\n        console.log(data);\n        _this.counter = data.Count;\n      });\n      hub.start();\n    });\n    this.http.get(this.getCounterUrl).subscribe(function (cloudCounter) {\n      console.log(cloudCounter);\n      _this.counter = +cloudCounter.count;\n    });\n  }\n  AppComponent.prototype.increaseCounter = function () {\n    var body = {\n      Id: this.counterId,\n      counter: this.counter += 1\n    };\n    this.http.post(this.updateCounterUrl, body, this.httpOptions).toPromise().catch(function (e) {\n      return console.log(e);\n    });\n  };\n  AppComponent.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n  };\n  AppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app-root\"]],\n    decls: 12,\n    vars: 1,\n    consts: [[2, \"text-align\", \"center\"], [3, \"click\"]],\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\");\n        i0.ɵɵtext(2, \"Counter Manager App\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"h2\");\n        i0.ɵɵtext(4, \"Current Counter\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"h3\");\n        i0.ɵɵtext(6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(7, \"br\");\n        i0.ɵɵelementStart(8, \"button\", 1);\n        i0.ɵɵlistener(\"click\", function AppComponent_Template_button_click_8_listener() {\n          return ctx.increaseCounter();\n        });\n        i0.ɵɵtext(9, \"+\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"button\", 1);\n        i0.ɵɵlistener(\"click\", function AppComponent_Template_button_click_10_listener() {\n          return ctx.increaseCounter();\n        });\n        i0.ɵɵtext(11, \"+\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(6);\n        i0.ɵɵtextInterpolate(ctx.counter);\n      }\n    }\n  });\n  return AppComponent;\n}();\nexport { AppComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}